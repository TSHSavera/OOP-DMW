/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Cards;

import API.Auth;
import API.SQLHandler;
import Utilities.SQLResultParser;
import Utilities.ThemeColors;
import Utilities.Validator;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 *
 * @author roehl
 */
public class MyProfile extends javax.swing.JPanel {

    /**
     * Creates new form MyProfile
     */
    public MyProfile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel16 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jComboBox9 = new javax.swing.JComboBox<>();
        jTextField13 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox10 = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setBackground(ThemeColors.BACKGROUND);
        setForeground(ThemeColors.ON_BACKGROUND);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0};
        layout.rowHeights = new int[] {0};
        setLayout(layout);

        jPanel1.setBackground(ThemeColors.BACKGROUND);
        jPanel1.setForeground(ThemeColors.ON_BACKGROUND);
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0};
        jPanel1Layout.rowHeights = new int[] {0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0};
        jPanel1.setLayout(jPanel1Layout);

        jPanel5.setBackground(ThemeColors.BACKGROUND);
        jPanel5.setForeground(ThemeColors.ON_BACKGROUND);
        jPanel5.setOpaque(false);
        java.awt.GridBagLayout jPanel5Layout = new java.awt.GridBagLayout();
        jPanel5Layout.columnWidths = new int[] {0, 16, 0, 16, 0, 16, 0};
        jPanel5Layout.rowHeights = new int[] {0, 8, 0};
        jPanel5.setLayout(jPanel5Layout);

        jLabel6.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel6.setText("Middle Name (Gitnang Pangalan)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel6, gridBagConstraints);

        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jTextField5, gridBagConstraints);

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jTextField6, gridBagConstraints);

        jLabel7.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel7.setText("Last Name (Apelyido)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel7, gridBagConstraints);

        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jTextField7, gridBagConstraints);

        jLabel8.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel8.setText("Suffix (Hulapi)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel8, gridBagConstraints);

        jLabel9.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel9.setText("First Name (Pangalan)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jLabel9, gridBagConstraints);

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jTextField8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel3.setBackground(ThemeColors.BACKGROUND);
        jPanel3.setForeground(ThemeColors.ON_BACKGROUND);
        jPanel3.setOpaque(false);
        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {0, 16, 0, 16, 0};
        jPanel3Layout.rowHeights = new int[] {0, 8, 0};
        jPanel3.setLayout(jPanel3Layout);

        jLabel2.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel2.setText("Civil Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel2, gridBagConstraints);

        jLabel3.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel3.setText("Religion (Relihiyon)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel3, gridBagConstraints);

        jLabel5.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel5.setText("Gender (Kasarian)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jLabel5, gridBagConstraints);

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jComboBox5, gridBagConstraints);

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", "Divorced", "Separated", "Widowed" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jComboBox9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jTextField13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel9.setOpaque(false);
        jPanel9.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel9, gridBagConstraints);

        jPanel10.setBackground(ThemeColors.BACKGROUND);
        jPanel10.setForeground(ThemeColors.ON_BACKGROUND);
        jPanel10.setOpaque(false);
        java.awt.GridBagLayout jPanel10Layout = new java.awt.GridBagLayout();
        jPanel10Layout.columnWidths = new int[] {0, 16, 0, 16, 0};
        jPanel10Layout.rowHeights = new int[] {0, 8, 0};
        jPanel10.setLayout(jPanel10Layout);

        jLabel13.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel13.setText("Barangay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jLabel13, gridBagConstraints);

        jLabel22.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel22.setText("House/Building No.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jLabel22, gridBagConstraints);

        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jTextField18, gridBagConstraints);

        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jTextField20, gridBagConstraints);

        jLabel24.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel24.setText("Street Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jLabel24, gridBagConstraints);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jComboBox6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel10, gridBagConstraints);

        jPanel7.setBackground(ThemeColors.BACKGROUND);
        jPanel7.setForeground(ThemeColors.ON_BACKGROUND);
        jPanel7.setOpaque(false);
        java.awt.GridBagLayout jPanel7Layout = new java.awt.GridBagLayout();
        jPanel7Layout.columnWidths = new int[] {0, 16, 0};
        jPanel7Layout.rowHeights = new int[] {0, 8, 0};
        jPanel7.setLayout(jPanel7Layout);

        jLabel19.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel19.setText("Province (Probinsya)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jLabel19, gridBagConstraints);

        jLabel21.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel21.setText("City/Municipality (Bayan)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jLabel21, gridBagConstraints);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel7.add(jComboBox2, gridBagConstraints);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel7.add(jComboBox3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel7, gridBagConstraints);

        jPanel12.setOpaque(false);
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel12.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel12.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel12.setText("Address");
        jPanel12.add(jLabel12, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel12, gridBagConstraints);

        jPanel18.setOpaque(false);
        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabel34.setFont(new java.awt.Font("Cantarell", 1, 18)); // NOI18N
        jLabel34.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel34.setText("Place of Birth");
        jPanel18.add(jLabel34, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel18, gridBagConstraints);

        jPanel2.setBackground(ThemeColors.BACKGROUND);
        java.awt.GridBagLayout jPanel2Layout1 = new java.awt.GridBagLayout();
        jPanel2Layout1.columnWidths = new int[] {0, 16, 0, 16, 0};
        jPanel2Layout1.rowHeights = new int[] {0, 8, 0};
        jPanel2.setLayout(jPanel2Layout1);

        jLabel14.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel14.setText("Email Address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel14, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField1, gridBagConstraints);

        jTextField21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jTextField21, gridBagConstraints);

        jLabel32.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel32.setText("Mobile Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jLabel32, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel8.setOpaque(false);
        java.awt.GridBagLayout jPanel8Layout = new java.awt.GridBagLayout();
        jPanel8Layout.columnWidths = new int[] {0, 16, 0, 16, 0};
        jPanel8Layout.rowHeights = new int[] {0, 8, 0};
        jPanel8.setLayout(jPanel8Layout);

        jLabel15.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel15.setText("Height (Taas) [CM]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel15, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jTextField14, gridBagConstraints);

        jLabel16.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel16.setText("Weight (Timbang) [KG]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jTextField15, gridBagConstraints);

        jLabel17.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel17.setText("Date of Birth (Araw ng Kapanganakan)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jLabel17, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel8.add(jTextField16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel8, gridBagConstraints);

        jPanel14.setOpaque(false);
        java.awt.GridBagLayout jPanel14Layout = new java.awt.GridBagLayout();
        jPanel14Layout.columnWidths = new int[] {0, 16, 0};
        jPanel14Layout.rowHeights = new int[] {0, 8, 0};
        jPanel14.setLayout(jPanel14Layout);

        jLabel29.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel29.setText("Province (Probinsya)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel29, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jComboBox1, gridBagConstraints);

        jComboBox10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox10.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox10ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jComboBox10, gridBagConstraints);

        jLabel30.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel30.setText("City/Municipality (Bayan)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jLabel30, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel14, gridBagConstraints);

        jPanel13.setOpaque(false);

        jLabel27.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel27.setForeground(ThemeColors.ON_BACKGROUND);
        jLabel27.setText("My Profile");

        jPanel15.setOpaque(false);

        jButton1.setBackground(ThemeColors.PRIMARY);
        jButton1.setForeground(ThemeColors.ON_PRIMARY);
        jButton1.setText("Update Data");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton1);

        jButton2.setBackground(ThemeColors.PRIMARY);
        jButton2.setForeground(ThemeColors.ON_PRIMARY);
        jButton2.setText("Save Edits");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jPanel15.add(jButton2);

        jButton3.setBackground(ThemeColors.ERROR);
        jButton3.setForeground(ThemeColors.ON_ERROR);
        jButton3.setText("Cancel Edits");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jPanel15.add(jButton3);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addContainerGap(10, Short.MAX_VALUE))
            .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel1.add(jPanel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(32, 32, 32, 32);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    private void jTextField21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField21ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            //Get the selected province
            String selectedProvince = jComboBox1.getSelectedItem().toString();
            //Get the list of cities/municipalities in the selected province
            List<String> cities = new ArrayList<>();
            //Query the database for the list of cities/municipalities
            String query = "SELECT MunicipalityName FROM municipalities WHERE ProvinceID = (SELECT ProvinceID FROM provinces WHERE ProvinceName = '" + selectedProvince + "') ORDER BY MunicipalityName ASC";
            //Call SQL Handler to execute the query
            SQLHandler a = new SQLHandler();
            a.createQuery(query).executeQuery();

            //For each row in the result set, add the city/municipality name to the list
            SQLResultParser parser = new SQLResultParser() {
                @Override
                public ArrayList<Map> sqlQuery() {
                    return a.getResults();
                }
            };
            //For each row in the result set, add the city/municipality name to the list
            for (int i = 0; i < parser.getResultsSize(); i++) {
                cities.add(parser.parseResults(i).getValueByKey("MunicipalityName").toString());
            }

            //Add the cities/municipalities to the combobox
            jComboBox10.removeAllItems();
            for (String city : cities) {
                jComboBox10.addItem(city);
            }
            ;
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            //Get the selected province
            String selectedProvince = jComboBox3.getSelectedItem().toString();
            //Get the list of cities/municipalities in the selected province
            List<String> cities = new ArrayList<>();
            //Query the database for the list of cities/municipalities
            String query = "SELECT MunicipalityName FROM municipalities WHERE ProvinceID = (SELECT ProvinceID FROM provinces WHERE ProvinceName = '" + selectedProvince + "') ORDER BY MunicipalityName ASC";
            //Call SQL Handler to execute the query
            SQLHandler a = new SQLHandler();
            a.createQuery(query).executeQuery();

            //For each row in the result set, add the city/municipality name to the list
            SQLResultParser parser = new SQLResultParser() {
                @Override
                public ArrayList<Map> sqlQuery() {
                    return a.getResults();
                }
            };
            //For each row in the result set, add the city/municipality name to the list
            for (int i = 0; i < parser.getResultsSize(); i++) {
                cities.add(parser.parseResults(i).getValueByKey("MunicipalityName").toString());
            }

            //Add the cities/municipalities to the combobox
            jComboBox2.removeAllItems();
            for (String city : cities) {
                jComboBox2.addItem(city);
            }
            ;
        }
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jComboBox10ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox10ItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            System.out.println("Triggered");
            //Get the selected city/municipality
            var selectedCityElement = jComboBox10.getSelectedItem();
            assert selectedCityElement != null;
            String selectedCity = selectedCityElement.toString();
            //Get the list of barangays in the selected city/municipality
            List<String> barangays = new ArrayList<>();
            //Query the database for the list of barangays
            String query = "SELECT BarangayName FROM barangay WHERE MunicipalityID = (SELECT MunicipalityID FROM municipalities WHERE MunicipalityName = '" + selectedCity + "' AND ProvinceID = (SELECT ProvinceID FROM provinces WHERE ProvinceName = '" + jComboBox1.getSelectedItem().toString() + "')) ORDER BY BarangayName ASC";
            //Call SQL Handler to execute the query
            SQLHandler a = new SQLHandler();
            a.createQuery(query).executeQuery();

            //For each row in the result set, add the barangay name to the list
            SQLResultParser parser = new SQLResultParser() {
                @Override
                public ArrayList<Map> sqlQuery() {
                    return a.getResults();
                }
            };
            //For each row in the result set, add the barangay name to the list
            for (int i = 0; i < parser.getResultsSize(); i++) {
                barangays.add(parser.parseResults(i).getValueByKey("BarangayName").toString());
            }

            //Add the barangays to the combobox
            jComboBox6.removeAllItems();
            for (String barangay : barangays) {
                jComboBox6.addItem(barangay);
            }
            ;
        }
    }//GEN-LAST:event_jComboBox10ItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        //Enable jButton 2 and 3
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        //Enable all fields
        editableFields();

    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        //Disable jButton 2 and 3
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        //Rollback all changes
        loadData();
        //Disable all fields
        uneditableFields();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        //submit the changes to the database
        submitData();
    }//GEN-LAST:event_jButton2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox10;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables

    //Generate the list of provinces in the combobox
    private void generateProvinces() {
        //Clear all comboboxes
        jComboBox1.removeAllItems();
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        jComboBox6.removeAllItems();
        jComboBox10.removeAllItems();

        //Get the list of provinces from the database
        List<String> provinces = new ArrayList<>();
        //Query the database for the list of provinces
        String query = "SELECT ProvinceName FROM provinces ORDER BY ProvinceName ASC";
        //Call SQL Handler to execute the query
        SQLHandler a = new SQLHandler();
        a.createQuery(query).executeQuery();

        //For each row in the result set, add the province name to the list
        SQLResultParser parser = new SQLResultParser() {
            @Override
            public ArrayList<Map> sqlQuery() {
                return a.getResults();
            }
        };
        //For each row in the result set, add the province name to the list
        for (int i = 0; i < parser.getResultsSize(); i++) {
            provinces.add(parser.parseResults(i).getValueByKey("ProvinceName").toString());
        }

        //Add the provinces to the combobox
        for (String province : provinces) {
            jComboBox1.addItem(province);
            jComboBox3.addItem(province);
        }
    }


    //Load when the panel is shown
    @Override
    public void addNotify() {
        super.addNotify();
        generateProvinces();
        //Disable jButton 2 and 3
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        //Disable all fields
        uneditableFields();
        //Load all the data from the database
        loadData();
    }

    private void uneditableFields() {
        //Make all fields uneditable
        jTextField1.setEditable(false);
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField13.setEditable(false);
        jTextField14.setEditable(false);
        jTextField15.setEditable(false);
        jTextField16.setEditable(false);
        jTextField18.setEditable(false);
        jTextField20.setEditable(false);
        jTextField21.setEditable(false);
        jComboBox1.setEnabled(false);
        jComboBox2.setEnabled(false);
        jComboBox3.setEnabled(false);
        jComboBox5.setEnabled(false);
        jComboBox6.setEnabled(false);
        jComboBox9.setEnabled(false);
        jComboBox10.setEnabled(false);
    }

    private void editableFields() {
        //Make all fields editable
        jTextField1.setEditable(true);
        jTextField5.setEditable(true);
        jTextField6.setEditable(true);
        jTextField7.setEditable(true);
        jTextField8.setEditable(true);
        jTextField13.setEditable(true);
        jTextField14.setEditable(true);
        jTextField15.setEditable(true);
        jTextField16.setEditable(true);
        jTextField18.setEditable(true);
        jTextField20.setEditable(true);
        jTextField21.setEditable(true);
        jComboBox1.setEnabled(true);
        jComboBox2.setEnabled(true);
        jComboBox3.setEnabled(true);
        jComboBox5.setEnabled(true);
        jComboBox6.setEnabled(true);
        jComboBox9.setEnabled(true);
        jComboBox10.setEnabled(true);
    }

    private void loadData() {
        //Query the database for the list of provinces
        String query = "SELECT * FROM user WHERE UserID = " + Auth.userId;
        //Call SQL Handler to execute the query
        SQLHandler a = new SQLHandler();
        a.createQuery(query).executeQuery();

        //For each row in the result set, add the province name to the list
        SQLResultParser parser = new SQLResultParser() {
            @Override
            public ArrayList<Map> sqlQuery() {
                return a.getResults();
            }
        };
        //For each row in the result set, add the province name to the list
        for (int i = 0; i < parser.getResultsSize(); i++) {
            var result = parser.parseResults(i);
            jTextField8.setText(result.getValueByKey("FirstName").toString());
            jTextField5.setText(result.getValueByKey("MiddleName").toString());
            jTextField6.setText(result.getValueByKey("LastName").toString());
            jTextField7.setText(result.getValueByKey("Suffix").toString());
            jTextField1.setText(result.getValueByKey("EmailAddress").toString());
            jTextField16.setText(result.getValueByKey("Birthdate").toString());

            //Set ComboBoxes Value
            jComboBox5.setSelectedItem(result.getValueByKey("Gender").toString());
        }

        //Check if there's existing profile data
        query = "SELECT profile.*, municipalities.*, provinces.*, barangay.* FROM profile INNER JOIN provinces ON profile.ProvinceID = provinces.ProvinceID INNER JOIN municipalities ON profile.MunicipalityID = municipalities.MunicipalityID INNER JOIN barangay ON profile.BarangayID = barangay.BarangayID WHERE UserID = " + Auth.userId;
        a.createQuery(query).executeQuery();
        if (a.getResults().isEmpty()) {
            return;
        } else {
            //Put the data in the fields
            parser = new SQLResultParser() {
                @Override
                public ArrayList<Map> sqlQuery() {
                    return a.getResults();
                }
            };
            for (int i = 0; i < parser.getResultsSize(); i++) {
                var result = parser.parseResults(i);
                jTextField21.setText(result.getValueByKey("ContactNo").toString());
                jTextField14.setText(result.getValueByKey("Height").toString());
                jTextField15.setText(result.getValueByKey("Weight").toString());
                jTextField13.setText(result.getValueByKey("Religion").toString());
                jTextField18.setText(result.getValueByKey("House").toString());
                jTextField20.setText(result.getValueByKey("StreetNo").toString());
                jComboBox1.setSelectedItem(result.getValueByKey("ProvinceName").toString());
                jComboBox10.setSelectedItem(result.getValueByKey("MunicipalityName").toString());
                jComboBox6.setSelectedItem(result.getValueByKey("BarangayName").toString());
                jComboBox3.setSelectedItem(result.getValueByKey("Birthplace_Mun").toString());
                jComboBox2.setSelectedItem(result.getValueByKey("Birthplace_Pro").toString());
                jComboBox9.setSelectedItem(result.getValueByKey("CivilStatus").toString());
            }
        }
    }

    private void submitData() {
        //Get the values from the fields
        String firstName = jTextField8.getText();
        String middleName = jTextField5.getText();
        String lastName = jTextField6.getText();
        String suffix = jTextField7.getText();
        String emailAddress = jTextField1.getText();
        String birthdate = jTextField16.getText();
        String mobileNumber = jTextField21.getText();
        String height = jTextField14.getText();
        String weight = jTextField15.getText();
        String religion = jTextField13.getText();
        String Civil = jComboBox9.getSelectedItem().toString();

        //Address
        String province = jComboBox1.getSelectedItem().toString();
        String city = jComboBox10.getSelectedItem().toString();
        String barangay = jComboBox6.getSelectedItem().toString();
        String house = jTextField18.getText();
        String street = jTextField20.getText();

        //Place of Birth
        String municipalityPOB = jComboBox3.getSelectedItem().toString();
        String provincePOB = jComboBox2.getSelectedItem().toString();


        //Check if all fields are filled
        if (firstName.isEmpty() || middleName.isEmpty() || lastName.isEmpty() || emailAddress.isEmpty() || birthdate.isEmpty() || mobileNumber.isEmpty() || height.isEmpty() || weight.isEmpty() || religion.isEmpty() || province.isEmpty() || city.isEmpty() || barangay.isEmpty() || house.isEmpty() || street.isEmpty() || municipalityPOB.isEmpty() || provincePOB.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill out all fields", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        //Check one-by-one if the fields have valid inputs
        if (!Validator.isEmail(emailAddress)) {
            JOptionPane.showMessageDialog(null, "Invalid Email Address", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.isDateInverted(birthdate)) {
            JOptionPane.showMessageDialog(null, "Invalid Birthdate", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.isMobileNumber(mobileNumber)) {
            JOptionPane.showMessageDialog(null, "Invalid Mobile Number", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.isNumeric(height)) {
            JOptionPane.showMessageDialog(null, "Invalid Height", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.isNumeric(weight)) {
            JOptionPane.showMessageDialog(null, "Invalid Weight", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.isAlphaNumericSpace(religion)) {
            JOptionPane.showMessageDialog(null, "Invalid Religion", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.isAlphaNumericSpaceSpecial(house)) {
            JOptionPane.showMessageDialog(null, "Invalid House", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.isAlphaNumericSpaceSpecial(street)) {
            JOptionPane.showMessageDialog(null, "Invalid Street", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Prepare the query
        String query = "UPDATE user SET FirstName = '" + firstName + "', MiddleName = '" + middleName + "', LastName = '" + lastName + "', Suffix = '" + suffix + "', EmailAddress = '" + emailAddress + "', Birthdate = '" + birthdate + "' WHERE UserID = " + Auth.userId;
        //Update the user info first
        SQLHandler a = new SQLHandler();

        try {
            a.createQuery(query).executeQuery();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Failed to update user info", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }


        //If the first update succeeded, update the rest of the info
        //Check if there's already an existing record in the profile
        query = "SELECT * FROM profile WHERE UserID = " + Auth.userId;
        a.createQuery(query).executeQuery();

        //If there's no existing record, insert a new one
        if (a.getResults().isEmpty()) {
            query = "INSERT INTO profile (UserID, ContactNo, Height, Weight, Religion, ProvinceID, MunicipalityID, BarangayID, House, StreetNo, Birthplace_Mun, Birthplace_Pro, CivilStatus) VALUES (" + Auth.userId + ", '" + mobileNumber + "', " + height + ", " + weight + ", '" + religion + "', (SELECT ProvinceID FROM provinces WHERE ProvinceName = '" + province + "'), (SELECT MunicipalityID FROM municipalities WHERE MunicipalityName = '" + city + "'), (SELECT BarangayID FROM barangay WHERE BarangayName = '" + barangay + "'), '" + house + "', '" + street + "', '" + municipalityPOB + "', '" + provincePOB + "', '" + Civil + "')";
            System.out.println("Used Insert");
        } else {
            //If there's an existing record, update the record
            query = "UPDATE profile SET ContactNo = '" + mobileNumber + "', Height = " + height + ", Weight = " + weight + ", Religion = '" + religion + "', ProvinceID = (SELECT ProvinceID FROM provinces WHERE ProvinceName = '"+ province + "'), MunicipalityID = (SELECT MunicipalityID FROM municipalities WHERE MunicipalityName = '"+ city + "'), BarangayID = (SELECT BarangayID FROM barangay WHERE BarangayName = '" + barangay +"'), House = '" + house + "', StreetNo = '" + street + "', Birthplace_Mun = '" + municipalityPOB + "', Birthplace_Pro = '" + provincePOB + "', CivilStatus = '" + Civil + "' WHERE UserID = " + Auth.userId;
            System.out.println("Used Update");
        }
        //Execute the query
        try {
            a.createQuery(query).executeQuery();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Failed to update profile info", "Error", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
            e.printStackTrace();
            return;
        }

        //If both updates succeeded, show a success message
        JOptionPane.showMessageDialog(null, "Profile Updated", "Success", JOptionPane.INFORMATION_MESSAGE);
        //Disable jButton 2 and 3
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        //Disable all fields
        uneditableFields();
        //Update the data
        loadData();
    }}
