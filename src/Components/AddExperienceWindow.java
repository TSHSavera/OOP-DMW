/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Components;
import API.Auth;
import API.SQLHandler;
import Components.TableComponents.ExperienceTable;
import Utilities.SQLResultParser;
import Utilities.ThemeColors;
import Utilities.Validator;

import javax.swing.*;
import java.util.ArrayList;
import java.util.Map;

/**
 *
 * @author Admin
 */
public class AddExperienceWindow extends javax.swing.JFrame {

    /**
     * Creates new form AddExperienceWindow
     */
    public AddExperienceWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        workPreferenceDetails = new javax.swing.JPanel();
        workDetailsLabel = new javax.swing.JLabel();
        companyTab = new javax.swing.JPanel();
        companyLabel = new javax.swing.JLabel();
        company = new Components.PlaceHolderTextField();
        positionTab = new javax.swing.JPanel();
        positionLabel = new javax.swing.JLabel();
        position = new Components.PlaceHolderTextField();
        dateStartedTab = new javax.swing.JPanel();
        dateStartedLabel = new javax.swing.JLabel();
        dateStarted = new Components.PlaceHolderTextField();
        dateEndedTab = new javax.swing.JPanel();
        dateEndedLabel = new javax.swing.JLabel();
        dateEnded = new Components.PlaceHolderTextField();
        presentWork = new javax.swing.JCheckBox();
        countryTab = new javax.swing.JPanel();
        countryLabel = new javax.swing.JLabel();
        chooseCountry = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(ThemeColors.BACKGROUND);

        workPreferenceDetails.setBackground(ThemeColors.PRIMARY_CONTAINER);
        workPreferenceDetails.setForeground(ThemeColors.ON_PRIMARY_CONTAINER);

        workDetailsLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        workDetailsLabel.setForeground(ThemeColors.ON_SURFACE);
        workDetailsLabel.setText("Work Experience Details");

        javax.swing.GroupLayout workPreferenceDetailsLayout = new javax.swing.GroupLayout(workPreferenceDetails);
        workPreferenceDetails.setLayout(workPreferenceDetailsLayout);
        workPreferenceDetailsLayout.setHorizontalGroup(
            workPreferenceDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workPreferenceDetailsLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(workDetailsLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        workPreferenceDetailsLayout.setVerticalGroup(
            workPreferenceDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workPreferenceDetailsLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(workDetailsLabel)
                .addGap(14, 14, 14))
        );

        companyTab.setBackground(ThemeColors.BACKGROUND);

        companyLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        companyLabel.setForeground(ThemeColors.ON_BACKGROUND);
        companyLabel.setText("Company:");

        company.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        company.setPlaceHolder("Ilagay ang kompanya");

        javax.swing.GroupLayout companyTabLayout = new javax.swing.GroupLayout(companyTab);
        companyTab.setLayout(companyTabLayout);
        companyTabLayout.setHorizontalGroup(
            companyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(companyTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(companyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(companyLabel)
                    .addComponent(company, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        companyTabLayout.setVerticalGroup(
            companyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(companyTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(companyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(company, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        positionTab.setBackground(ThemeColors.BACKGROUND);

        positionLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        positionLabel.setForeground(ThemeColors.ON_BACKGROUND);
        positionLabel.setText("Position:");

        position.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        position.setPlaceHolder("Ilagay ang posisyon");

        javax.swing.GroupLayout positionTabLayout = new javax.swing.GroupLayout(positionTab);
        positionTab.setLayout(positionTabLayout);
        positionTabLayout.setHorizontalGroup(
            positionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(positionTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(positionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(positionLabel)
                    .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        positionTabLayout.setVerticalGroup(
            positionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(positionTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(positionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(position, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        dateStartedTab.setBackground(ThemeColors.BACKGROUND);

        dateStartedLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dateStartedLabel.setForeground(ThemeColors.ON_BACKGROUND);
        dateStartedLabel.setText("Date Started (YYYY-MM-DD)");

        dateStarted.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateStarted.setPlaceHolder("Kailan nagsimula");

        javax.swing.GroupLayout dateStartedTabLayout = new javax.swing.GroupLayout(dateStartedTab);
        dateStartedTab.setLayout(dateStartedTabLayout);
        dateStartedTabLayout.setHorizontalGroup(
            dateStartedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateStartedTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(dateStartedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateStarted, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateStartedLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dateStartedTabLayout.setVerticalGroup(
            dateStartedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateStartedTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(dateStartedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateStarted, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        dateEndedTab.setBackground(ThemeColors.BACKGROUND);

        dateEndedLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        dateEndedLabel.setForeground(ThemeColors.ON_BACKGROUND);
        dateEndedLabel.setText("Date Ended (YYYY-MM-DD)");

        dateEnded.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateEnded.setPlaceHolder("Kailan natapos");

        javax.swing.GroupLayout dateEndedTabLayout = new javax.swing.GroupLayout(dateEndedTab);
        dateEndedTab.setLayout(dateEndedTabLayout);
        dateEndedTabLayout.setHorizontalGroup(
            dateEndedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateEndedTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(dateEndedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateEnded, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateEndedLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dateEndedTabLayout.setVerticalGroup(
            dateEndedTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dateEndedTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(dateEndedLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dateEnded, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        presentWork.setBackground(ThemeColors.BACKGROUND);
        presentWork.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        presentWork.setForeground(ThemeColors.ON_BACKGROUND);
        presentWork.setText("Present Work");
        presentWork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presentWorkActionPerformed(evt);
            }
        });

        countryTab.setBackground(ThemeColors.BACKGROUND);

        countryLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        countryLabel.setForeground(ThemeColors.ON_BACKGROUND);
        countryLabel.setText("Country");

        chooseCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Philippines", "USA", "etc" }));
        chooseCountry.setBorder(null);

        javax.swing.GroupLayout countryTabLayout = new javax.swing.GroupLayout(countryTab);
        countryTab.setLayout(countryTabLayout);
        countryTabLayout.setHorizontalGroup(
            countryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(countryTabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(countryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chooseCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryLabel))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        countryTabLayout.setVerticalGroup(
            countryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(countryTabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(countryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chooseCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        save.setBackground(ThemeColors.PRIMARY);
        save.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        save.setForeground(ThemeColors.ON_PRIMARY);
        save.setText("Save");
        save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(workPreferenceDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(companyTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(positionTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(presentWork))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(dateStartedTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(save, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dateEndedTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6)
                                .addComponent(countryTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 6, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(workPreferenceDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(companyTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(positionTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateStartedTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateEndedTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countryTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(presentWork)
                .addGap(18, 18, 18)
                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void presentWorkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentWorkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_presentWorkActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        //Save data to table
        submitExperience();
    }//GEN-LAST:event_saveActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        //Update the table
        ExperienceTable.updateTable();
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddExperienceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddExperienceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddExperienceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddExperienceWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new AddExperienceWindow().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> chooseCountry;
    private Components.PlaceHolderTextField company;
    private javax.swing.JLabel companyLabel;
    private javax.swing.JPanel companyTab;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JPanel countryTab;
    private Components.PlaceHolderTextField dateEnded;
    private javax.swing.JLabel dateEndedLabel;
    private javax.swing.JPanel dateEndedTab;
    private Components.PlaceHolderTextField dateStarted;
    private javax.swing.JLabel dateStartedLabel;
    private javax.swing.JPanel dateStartedTab;
    private javax.swing.JPanel jPanel1;
    private Components.PlaceHolderTextField position;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JPanel positionTab;
    private javax.swing.JCheckBox presentWork;
    private javax.swing.JButton save;
    private javax.swing.JLabel workDetailsLabel;
    private javax.swing.JPanel workPreferenceDetails;
    // End of variables declaration//GEN-END:variables

    private void submitExperience() {
        // Get the values from the textfields
        String company = this.company.getText();
        String position = this.position.getText();
        String dateStarted = this.dateStarted.getText();
        String dateEnded = this.dateEnded.getText();
        String country = this.chooseCountry.getSelectedItem().toString();
        boolean isPresentWork = this.presentWork.isSelected();

        // Check if the fields are empty - if isPresent is false
        if (isPresentWork && (company.isEmpty() || position.isEmpty() || dateStarted.isEmpty())) {
            // Show an error message
            JOptionPane.showMessageDialog(this, "Please fill in all the fields", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else if (!isPresentWork && (company.isEmpty() || position.isEmpty() || dateStarted.isEmpty() || dateEnded.isEmpty())) {
            // Show an error message
            JOptionPane.showMessageDialog(this, "Please fill in all the fields", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        // Check if data is valid - check is dateEnded if isPresentWork is false
        else if (!Validator.isDateInverted(dateStarted) || (!isPresentWork && !Validator.isDateInverted(dateEnded))) {
            // Show an error message
            JOptionPane.showMessageDialog(this, "Please enter a valid date format (YYYY-MM-DD)", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        // Check if the date started is before the date ended - check this if isPresentWork is false
        else if (!isPresentWork && dateStarted.compareTo(dateEnded) > 0) {
            // Show an error message
            JOptionPane.showMessageDialog(this, "Date started should be before the date ended", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else if (!Validator.isAlphaNumericSpace(company)) {
            // Show an error message
            JOptionPane.showMessageDialog(this, "Company name should be alphanumeric", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else if (!Validator.isAlphaNumericSpace(position)) {
            // Show an error message
            JOptionPane.showMessageDialog(this, "Position should be alphanumeric", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else {
            //Insert the data to the database
            //Insert the values to the database
            //Create a new SQLResultParser object
            SQLResultParser sqlResultParser = new SQLResultParser() {
                @Override
                public ArrayList<Map> sqlQuery() {
                    //Create a new SQLHandler object
                    SQLHandler sqlHandler = new SQLHandler();
                    //Create a new query
                    String query = "INSERT INTO work_experience (UserID, Company, Position, DateStarted, DateEnded, CountryID, isPresent) VALUES ('" + Auth.userId + "', '" + company + "', '" + position + "', '" + dateStarted + "', '" + dateEnded + "', (SELECT CountryID FROM countries WHERE CountryName = '"+ country +"') ,'" + (isPresentWork ? 1 : 0) + "')";
                    //Change query if isPresentWork is true - set DateEnded to NULL
                    if (isPresentWork) {
                        query = "INSERT INTO work_experience (UserID, Company, Position, DateStarted, CountryID, isPresent) VALUES ('" + Auth.userId + "', '" + company + "', '" + position + "', '" + dateStarted + "', (SELECT CountryID FROM countries WHERE CountryName = '"+ country +"') ,'" + 1 + "')";
                    }
                    //Execute the query
                    sqlHandler.createQuery(query).executeQuery();
                    //Return the results
                    return sqlHandler.getResults();
                }
            };

            //Check if the result is successful
            if (sqlResultParser.getResultsSize() > 0) {
                //If successful, close the form
                this.dispose();
            } else {
                //If not successful, show a dialog error message
                JOptionPane.showMessageDialog(null, "Error: Can't submit the data!", "Submit Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void generateCountry() {
        //Create a new SQLResultParser object
        SQLResultParser sqlResultParser = new SQLResultParser() {
            @Override
            public ArrayList<Map> sqlQuery() {
                //Create a new SQLHandler object
                SQLHandler sqlHandler = new SQLHandler();
                //Create a new query
                String query = "SELECT CountryName FROM countries";
                //Execute the query
                sqlHandler.createQuery(query).executeQuery();
                //Return the results
                return sqlHandler.getResults();
            }
        };

        //Get the size of the results
        int size = sqlResultParser.getResultsSize();
        //Clear the combo box
        this.chooseCountry.removeAllItems();
        //Loop through the results and add them to the combo box
        for (int i = 0; i < size; i++) {
            this.chooseCountry.addItem(sqlResultParser.parseResults(i).getValueByKey("CountryName").toString());
        }

    }

    //Load when the panel is shown
    @Override
    public void addNotify() {
        super.addNotify();
        //Generate the country list
        generateCountry();

    }
}
